CREATE TABLE IF NOT EXISTS match_stats (
    match_id INTEGER PRIMARY KEY NOT NULL,
    radiant_win INTEGER AS Boolean NOT NULL,
    dire_score INTEGER NOT NULL,
    radiant_score INTEGER NOT NULL,
    skill INTEGER NOT NULL,
    game_mode INTEGER NOT NULL,
    duration INTEGER NOT NULL,
    start_time INTEGER NOT NULL,
    radiant_barracks INTEGER NOT NULL,
    dire_barracks INTEGER NOT NULL,
    radiant_towers INTEGER NOT NULL,
    dire_towers INTEGER NOT NULL,
    radiant_name TEXT,
    dire_name TEXT
);

selectAllMatchStats:
SELECT
  match_stats.*,
  player_stats.account_id,
  player_stats.match_id,
  player_stats.name,
  player_stats.persona_name,
  player_stats.player_slot,
  player_stats.assists,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.backpack_0) AS backpack_0,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.backpack_1) AS backpack_1,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.backpack_2) AS backpack_2,
  player_stats.deaths,
  player_stats.denies,
  player_stats.gpm,
  player_stats.hero_damage,
  player_stats.hero_healing,
  player_stats.hero_id,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_0) AS item_0,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_1) AS item_1,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_2) AS item_2,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_3) AS item_3,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_4) AS item_4,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_5) AS item_5,
  (SELECT item_asset.image_path FROM item_asset WHERE item_asset.id = player_stats.item_neutral) AS item_neutral,
  player_stats.kills,
  player_stats.last_hits,
  player_stats.level,
  player_stats.tower_damage,
  player_stats.xpm,
  player_stats.observers,
  player_stats.sentries
FROM match_stats
INNER JOIN player_stats ON match_stats.match_id = player_stats.match_id
WHERE match_stats.match_id = :id
ORDER BY player_stats.player_slot ASC;

upsert {
    UPDATE match_stats
    SET radiant_win = :radiantWin,
        dire_score = :direScore,
        radiant_score = :radiantScore,
        skill = :skill,
        game_mode = :gameMode,
        duration = :duration,
        start_time = :startTime,
        radiant_barracks = :radiantBarracks,
        dire_barracks = :direBarracks,
        radiant_towers = :radiantTowers,
        dire_towers = :direTowers,
        radiant_name = :radiantName,
        dire_name = :direName
    WHERE match_id = :matchId;

    INSERT OR IGNORE INTO match_stats (
        match_id,
        radiant_win,
        dire_score,
        radiant_score,
        skill,
        game_mode,
        duration,
        start_time,
        radiant_barracks,
        dire_barracks,
        radiant_towers,
        dire_towers,
        radiant_name,
        dire_name
    ) VALUES (
        :matchId,
        :radiantWin,
        :direScore,
        :radiantScore,
        :skill,
        :gameMode,
        :duration,
        :startTime,
        :radiantBarracks,
        :direBarracks,
        :radiantTowers,
        :direTowers,
        :radiantName,
        :direName
    );
}
