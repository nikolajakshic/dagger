apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.squareup.sqldelight'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion 30
    defaultConfig {
        applicationId "com.nikola.jakshic.dagger"
        minSdkVersion 16
        targetSdkVersion 30
        versionCode 28
        versionName "1.2.4"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

configurations {
    ktlint
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.3.0'
    implementation 'androidx.activity:activity-ktx:1.2.3'
    implementation 'androidx.fragment:fragment-ktx:1.3.4'
    implementation 'androidx.core:core-ktx:1.5.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'com.google.android.material:material:1.0.0'
    // Networking
    implementation 'com.squareup.retrofit2:retrofit:2.6.4'
    implementation 'com.squareup.retrofit2:converter-moshi:2.6.4'
    implementation 'com.squareup.moshi:moshi:1.12.0'
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.12.0'
    kaptTest 'com.squareup.moshi:moshi-kotlin-codegen:1.12.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.0'
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.0'
    // ImageLoading
    implementation 'io.coil-kt:coil:1.1.1'
    // Dependency Injection
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    // LiveData & ViewModel
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.1'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.1'
    // SQLDelight
    implementation "com.squareup.sqldelight:android-driver:$sqldelight_version"
    implementation "com.squareup.sqldelight:coroutines-extensions-jvm:$sqldelight_version"
    // Paging
    implementation 'androidx.paging:paging-runtime:2.0.0'
    // Navigation
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    // RecyclerView
    implementation 'androidx.recyclerview:recyclerview:1.2.0'
    // SpiderChart
    implementation 'com.github.nikolajakshic:spiderchart:1.0.2'
    // KtLint
    ktlint 'com.pinterest:ktlint:0.32.0'
    // LeakCanary
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.6'
    // Test
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test:runner:1.3.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'
}

sqldelight {
    Database {
        sourceFolders = ["java"]
        dialect = "sqlite:3.18"
    }
}

// Coil requires Java 8 bytecode.
tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task ktlint(type: JavaExec, group: "verification") {
    description = "Check Kotlin code style."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "src/**/*.kt"
}
check.dependsOn ktlint

task ktlintFormat(type: JavaExec, group: "formatting") {
    description = "Fix Kotlin code style deviations."
    classpath = configurations.ktlint
    main = "com.pinterest.ktlint.Main"
    args "-F", "src/**/*.kt"
}